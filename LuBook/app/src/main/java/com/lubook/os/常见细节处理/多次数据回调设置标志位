
isDetect: 设置标志位,每次检测前先isDetect = true停止接收数据，
    @Override
    public void onPreviewFrame(final byte[] bytes, final Camera camera) {

        if (FaceScene == FaceTrain) {
            // 训练
            if (!isTrain && Curtrain < TrainMax) {
                isTrain = true;
                faceApi.trainFace(bytes, trainName, new IReemanFaceCallback() {
                    @Override
                    public void onSuccess(double score, String msg) {
                        Log.d("main::", facestr[faceIndex] + "第" + Curtrain + "张上传成功");
                        trainFace.onTrainSuccess(score, facestr[faceIndex] + "第" + Curtrain + "张上传成功");
                        Curtrain++;
                        isTrain = false;
                        if ((Curtrain % (TrainMax - 1)) == 0) {
                            faceIndex = faceIndex + 1;
                            faceTrainDailog(facestr[faceIndex]);
                        }
                    }

                    @Override
                    public void onFail(int code, String msg) {
                        isTrain = false;
                        trainFace.onTrainSuccess(code, facestr[faceIndex] + "第" + Curtrain + "张上传失败");
                        Log.d("main::", facestr[faceIndex] + "第" + Curtrain + "张上传失败");
                    }
                }, mCamera.getParameters().getPreviewFormat());
            }
        } else if (FaceScene == FaceDetect) {
            if (!isDetect) {
                isDetect = true;
                // 检测
                faceApi.detectFace(bytes, new IReemanFaceCallback() {
                    @Override
                    public void onSuccess(double score, String msg) {
                        Log.v("Api", "onSuccess: " + score);
                        if (onFindFace != null) {
                            isDetect = false;
                            onFindFace.onDetectSuccess(score, msg);
                        }
                    }

                    @Override
                    public void onFail(int code, String msg) {
                        isDetect = false;
                        Log.v("Api", "onFail");
                    }
                }, mCamera.getParameters().getPreviewFormat());
            }

        }

    }